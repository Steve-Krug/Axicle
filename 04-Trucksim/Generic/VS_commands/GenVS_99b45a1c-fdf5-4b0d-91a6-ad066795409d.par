PARSFILE
#FullDataName Generic VS Commands`ACC Logic: w/HUD, in-lane calc., 3A Truck`ADAS Support
#VehCode VS Commands, ADAS

#MiscYellow0
! This Adaptive Cruise Control (ACC) logic changes vehicle speed by making speed control gain updates
! This gain is with repsect to the ACC speed setpoint, established w/VS Commands before this Dataset
 
*************** ACC Tuning Parameters *************** 
! Parameters below can be used to toggle activation and tune the ACC performance
DEFINE_PARAMETER ACC_ON = 1; - ; boolean for turning ACC on or off
! do not attempt to calculate ACC outputs when relative speed exceeds this value
DEFINE_PARAMETER ACC_MAX_REL_SPD = 300; km/h; max allowable relative speed calc.

DEFINE_PARAMETER REL_SPEED_DIFF_THRESH = 15; km/h; spd. vs. rel spd diff. min. thresh. value
! Non-zero, minimum value for ACC Gain
DEFINE_PARAMETER MIN_ACC_GAIN = 0.05; - ; min. SC gain for ACC during stop cond. 
! Minimum allowed longitudinal distance betweehn VUT and car ahead
DEFINE_PARAMETER MIN_SAFE_DIST = 5; m; min. safety dist.
! Threshold speed to determine when a complete stop is requested
DEFINE_PARAMETER MAX_SPD_ADD_PRS = 5; km/h; min. speed thresh, to add brk. press

***** The two values below are used in a stopping distance estimation calculation, later on
DEFINE_PARAMETER PEAK_ACC_BK_ACCEL = -5; m/s2; peak braking negative accel
! Estimated delay from brake actuation request to actual full brake pressure build, based on CarSim C-Class hatchback
DEFINE_PARAMETER EST_BRK_DELAY = 0.35; s; estimated brake system delay

! Euro NCAP notes that ACC braking should not exceed  -5 m/s^2 of longitudinal accel. during braking
! This tuning parameter is the peak brake pressure to meet Euro NCAP ACC protocol based on a CarSim C-Class hatchback 
DEFINE_PARAMETER ACC_ON_BRK_PRESS  = 3.00; MPa; max allowed brake pressure for ACC on
! Special additional braking is needed to override near-zero speed transient motion
DEFINE_PARAMETER ACC_ADD_BRK_PRESS = 1; MPa; add 1 MPa under near-stop condiitons
! Normal braking pressure without ACC (with no concerns about Euro NCAP ACC test points)
DEFINE_PARAMETER ACC_OFF_BRK_PRESS = 10; MPa; max allowed brake pressure for ACC off

! Threshold for comparison between est. stop distance and currently sensed relative dist. to vehicle ahead 
DEFINE_PARAMETER STAT_VEH_ACC_THRESH = 1.0; - ; stop dist factor thresh

! Assign ACC Speed Limit, this is the cruise control reference value established outside of this logic
! with the parameter 'SPEED_LIMIT')
define_output speedLimitSet = speed_limit; km/h; ACC speed setpoint
define_output speedMpS = Vxz_Fwd; m/s; current speed in m/s

******************************** ACC Logic ********************************
There are three main components to this ACC logic

! 1) Calculate a minimum desired relative distance between the VUT and the lead vehicle ahead the VUT and also in its lane
!   --> if the relative dist. from the VUT to the lead vehicle <  minimum desired dist. lower speed control gain
! 2) Calculate a minimum desired relative speed between the VUT and vehicle ahead the VUT and also in its lane
 !  --> if the relative speed between the VUT to the lead vehicle <  minimum desired rel. speed, lower speed control gain

! A kinematic stopping distance estimation calculated and compared to the relative distance btw. VUT an lead vehicle 
! - This helps decide how to change the speed controller gain if the stopping dist. est. exceeds the sensed relative distance 
! - This helps to assure the VUT does not stop too harshly, and minimizes the space between the VUT and
!    the lead vehicle, when the VUT matches the lead vehicle speed

! A calculation is made to determine if the lead vehicle ahead of the VUT is traveling at a near-zero speed
! In this case the VUT should prepare to come to a complete stop and adjust speed controller gains accordingly
! "near-zero" is deteremined with an ACC tuning parameter value, 
**** Parse Data from ADAS Sensors Utilized by ACC ****

! Define allowable braking force, for when ACC is on 
EQ_OUT PBK_CON_MAX_SC = if(ACC_ON & Vxz_Fwd > MIN_THRESH, ...
ACC_ON_BRK_PRESS, ACC_OFF_BRK_PRESS)

! Determine the minimum value of relative speed and distance sensed by the ACC Radar, 
! if multiple objects are sensed at one time
define_output minRelSpeedCheck = if(abs(SpdS2_1)>0 & abs(SpdS2_2)>0, MIN(SpdS2_1,SpdS2_2),SpdS2_1) ; km/h; min rel. spd from multiple sensors
! Utilize the minimum relative speed valued calculated above, if it does not exceed a threshold value
define_output minRelSpeed = if( abs(minRelSpeedCheck) < ACC_MAX_REL_SPD , ...
minRelSpeedCheck, 0); km/h; rel. spd w/init val. saturation


define_output minDistExceeded = if(DisS2_1 > 0 & minRelDistBump < MIN_SAFE_DIST, 1, 0); - ; bool for min. rel dist exceeded

! The forward speed of the lead vehicle/target = ego speed + relative speed
define_output leadVehSpeed = Vxz_Fwd + minRelSpeed; km/h; diff between Vx and rel speed

**** Desired ACC Distance Calculation ****
! Desired minimum distance between vehicles, calculation
define_output accDesiredDist = time_gap*leadVehSpeed + MIN_SAFE_DIST; m; desired ACC dist

**** Time-To-Collision Calculation ****
! TTC > 0 means the object ahead is slowing down or stopped, relative to the ego vehicle
define_output sens2_TTC = if( MagS2_1 > 0  & abs(minRelSpeed) > 0 ...
& abs(minRelSpeed) < ACC_MAX_REL_SPD , -minRelDistBump/minRelSpeed, 0); s ; TTC for second sensor

! Special output value for TTC without spikes at inflection points when there is a small change in relative 
! distance but a large magnitude change in relative speed (mainly for plots and heads-up display)
define_output acc_TTC = if( abs(sens2_TTC) < 130, sens2_TTC, 0); s; ACC TTC plotting and HUD

**** Desired Dist. vs Relative Dist. Criteria ****
! Calculated desiredACC gain based on relative distance vs desired spacing
define_output desiredVsActualDistGain = if(MagS2_1 > 0 , MIN(1, minRelDistBump/accDesiredDist), 1); - ; test for ACC on

**** Stopping Distance Factor ****
! Stopping distance factor based on estimated kinematic stopping distance, helps assure the ego 
! Vehicle does not stop to early or too harshly, unless it is necessary
! Assume peak negative acceleration under braking PEAK_ACC_BK_ACCEL as determined by Euro NCAP

! Time under braking = v0-vf/PEAK_ACC_BK_ACCEL + time to ramp to peak braking (0.7 sec)
define_output tUnderBrk = if (minRelDistBump>0, abs(Vxz_Fwd/PEAK_ACC_BK_ACCEL) + EST_BRK_DELAY, 0); s; time from current spd to stop

! Estimated kinematic stopping dist= v0*time under braking + (1/2)*(PEAK_ACC_BK_ACCEL)*t^2
define_output estStopDist = Vxz_Fwd*tUnderBrk + 0.5*PEAK_ACC_BK_ACCEL*(tUnderBrk^2) + MIN_SAFE_DIST; m; est. stopping dist. + min. safe dist.
define_output stopDistFactor = if(minRelDistBump>0, minRelDistBump/estStopDist, 0); - ; stop dist factor for acc spd gain

**** Desired Speed and Desired Speed Gain ****
! Set the desired speed to either the ACC setpoint, or the lead vehicle speed (if it is traveling slower than the setpoint) 
define_output desiredSpeed = if( (MagS2_1 > 0) & (abs(minRelSpeed) < ACC_MAX_REL_SPD)...
 & (leadVehSpeed> MIN_THRESH) & minDistExceeded > 0, leadVehSpeed, speedLimitSet) ; km/h; desired relative speed

! Desired speed gain = desired speed divided by the initial target speed
define_output desiredSpdGain = if(MagS2_1 > 0, desiredSpeed/speed_limit, 1); -; desired relative speed gain
**** Desired speed gain adjusted with estimated kinematic stopping distance factor ****
define_output desiredSpdGainAdj = if(stopDistFactor <=2 & stopDistFactor > 0, desiredSpdGain*stopDistFactor, desiredSpdGain); -; adjusted spd gain, from est stp dist 

**** Choose minimum speed controller gain, between the desired distance and desired speed criteria ****
define_output minRelCriteriaGain = min(desiredVsActualDistGain ,desiredSpdGainAdj); - ; min. relative obst. criteria gain

**** Low Magnitude Relative Speed Criteria ****
! (Includes) 
! The condition for when the relative speed is low AND the VUT veh. speed is low
! Recognizing the lead vehicle is stopped or nearly stopped, so VUT braking should occur through ACC
! The threshold condition for requesting a complete stop from ACC via speed controller gain 

! Flag for lead vehicle traveling at low speed or completly stopped
define_output leadVehSlowStopFlag =  if( Vxz_Fwd < leadVehSpeed | ( leadVehSpeed < MIN_THRESH & ...
 leadVehSpeed >=-MIN_THRESH), 1, 0); - ; flag for speed conditions
! Boolean for whether ACC should use kinematic stopping dist. calc. for ACC braking
define_output stopDistGainOn = if(acc_TTC > 0 & stopDistFactor > 0 & leadVehSlowStopFlag & ... 
stopDistFactor < STAT_VEH_ACC_THRESH, 1, 0); - ; use of stopping dist calc for brake

! Requested gain when stopped vehicle is detected
define_output accSpdStopGain = if ( leadVehSpeed < REL_SPEED_DIFF_THRESH ...
& minDistExceeded > 0 | stopDistGainOn, MIN_ACC_GAIN, 1); - ;

******************************** Set Requested ACC Speed Target Gain ********************************
! Final output or the ACC Gain (auto set to 0, if minimum safety spacing condition is violated
define_output minACC_Gain = if(  minDistExceeded, 0, min( minRelCriteriaGain, accSpdStopGain) ); -; mult-sensor bool
! This modifies the original SPEED_TARGET, not the current speed 
EQ_OUT SPEED_TARGET_GAIN(1) = IF( ACC_ON & vehObjInLane, minACC_Gain, 1)
define_output speedTargetGainOut =  SPEED_TARGET_GAIN(1); - ; output value for ACC target gain

! Add brake pressure for the following conditions:
! Near zero speed condition achieved by VUT, and it's necessary to remove long. accel transient motions
! The minimum relative distance to the front bumper is exceeded and the desired ACC gain == 0
EQ_IN PBK_CON_OFFSET = ACC_ADD_BRK_PRESS * (minACC_Gain==0 & minDistExceeded > 0 & Vxz_Fwd < MAX_SPD_ADD_PRS)
#ENDMYellow

*MODELCODE VS Commands, ADAS
PARSFILE Animator\HUD\HUD_a510ed1b-caa7-4157-89ec-60a5d7029412.par
#BlueLink0 Animator: HUD`ACC Icon, Rt. Side, Mid.` HUD Groups` , Miscellaneous`HUD_a510ed1b-caa7-4157-89ec-60a5d7029412

PARSFILE Animator\HUD\HUD_2fcb6793-9269-427d-bee7-e158ca9950b4.par
#BlueLink1 Animator: HUD`ACC Bars, Rt. Side, Mid.` ACC - Adaptive Cruise Control` , Miscellaneous`HUD_2fcb6793-9269-427d-bee7-e158ca9950b4

PARSFILE Plot\Setup\Plot_46826ad8-4dac-4900-9371-10236d208453.par
#BlueLink3 Plot: Setup`Sensing: Relative Distances and Speeds` Obstacle Avoidance` , Plot`Plot_46826ad8-4dac-4900-9371-10236d208453

PARSFILE Plot\Setup\Plot_c8e3fd8e-6345-44b8-b473-62a8c2bdf7ce.par
#BlueLink4 Plot: Setup`ACC Validation Outputs: 1` Obstacle Avoidance` , Plot`Plot_c8e3fd8e-6345-44b8-b473-62a8c2bdf7ce

PARSFILE Plot\Setup\Plot_36e6a89e-3e08-4016-a61f-212552d3df9b.par
#BlueLink5 Plot: Setup`ACC Validation Outputs: 2` Obstacle Avoidance` , Plot`Plot_36e6a89e-3e08-4016-a61f-212552d3df9b

PARSFILE Plot\Setup\Plot_b2bebf07-23a8-47ba-8bb3-0b3b0ec8abd1.par
#BlueLink6 Plot: Setup`ACC Validation: SC Gain Check` Obstacle Avoidance` , Plot`Plot_b2bebf07-23a8-47ba-8bb3-0b3b0ec8abd1


#EMBEDDED_NOTES
#These VS Commands provide threshold parameter values and logic for the ACC speed controller. There are several conditions for speed control including relative speed and distance to the lead vehicle, the estimated stoping distance of the ego vehicle, and perception check of whether the lead vehicle is stopped or moving slowly.
#
#The range of the sensor is set to 80 m. To controls speed with this ACC logic, the gain for the target speed is modified for the speed controller.
#
#The ACC HUD icon is a combination of HUD objects that are defined by two datasets.  The first dataset, ACC Icon, displays the base, lead car, active cruise alert, and brakes.  The second dataset, ACC Bars, displays the distance bars which indicate following distance.
#END_EMBEDDED_NOTES

LOG_ENTRY Used Dataset: Generic VS Commands; { ADAS Support } ACC Logic: w/HUD, in-lane calc., 3A Truck
#Library : Generic VS Commands
#DataSet : ACC Logic: w/HUD, in-lane calc., 3A Truck
#Category: ADAS Support
#FileID  : GenVS_99b45a1c-fdf5-4b0d-91a6-ad066795409d
#Created : 10-15-2021 12:01:41
#Modified: 10-20-2021 13:29:55
#Product : TruckSim 2023.0
#DataVer : 2023.0
#VehCode VS Commands, ADAS

END
